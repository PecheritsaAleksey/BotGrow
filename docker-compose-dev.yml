version: '3.8'

services:
  db:
    image: postgres:15
    container_name: botgrow-db
    ports:
      - '5432:5432'
    env_file: .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      interval: 5s
      timeout: 3s
      retries: 10

  core-api:
    image: node:20-alpine
    container_name: botgrow-core-api
    working_dir: /app
    ports:
      - '4000:4000'
    env_file: .env
    environment:
      CHOKIDAR_USEPOLLING: 'true'
      WATCHPACK_POLLING: 'true'
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - ./apps/core-api:/app
      - pnpm-store:/root/.local/share/pnpm
    command: sh -c "npm i -g pnpm && pnpm i && pnpm dev"
    depends_on:
      db:
        condition: service_healthy

  bot-server:
    image: node:20-alpine
    container_name: botgrow-bot-server
    working_dir: /app
    ports:
      - '3000:3000'
    env_file: .env
    environment:
      CHOKIDAR_USEPOLLING: 'true'
      WATCHPACK_POLLING: 'true'
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - ./apps/bot-server:/app
      - pnpm-store:/root/.local/share/pnpm
    command: sh -c "npm i -g pnpm && pnpm i && pnpm dev"
    depends_on:
      db:
        condition: service_healthy

  frontend:
    image: node:20-alpine
    container_name: botgrow-frontend
    working_dir: /app
    ports:
      - '5173:5173'
    env_file: .env
    environment:
      CHOKIDAR_USEPOLLING: 'true'
      WATCHPACK_POLLING: 'true'
    volumes:
      - ./frontend:/app
      - ./tsconfig.base.json:/tsconfig.base.json:ro
      - pnpm-store:/root/.local/share/pnpm
    command: sh -c "npm i -g pnpm && pnpm i && pnpm dev --host 0.0.0.0 --port 5173"
    depends_on:
      - core-api

volumes:
  pgdata:
  pnpm-store:
